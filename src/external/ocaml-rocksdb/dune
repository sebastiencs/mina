(include ../../dune.linker.inc)

(library
    (name rocks)
    (public_name rocks)
    (no_dynlink)
    (libraries ctypes ctypes.foreign)
    (modules (:standard \ rocks_linker_flags_gen rocks_test))
    (c_library_flags (:standard (:include flags.sexp) %{read:dune-linker}))
    )

(executable
 (name rocks_linker_flags_gen)
 (modules rocks_linker_flags_gen)
 (libraries dune.configurator)
 )

;; todo: fails with sandbox, since the generated flags are opaque to dune
(rule
 (targets flags.sexp)
 (deps librocksdb.so (sandbox none))
 (action (run ./rocks_linker_flags_gen.exe)))

(rule
 (targets librocksdb.so)
 (deps (source_tree rocksdb))
 (action (bash "
   rm -rf rocksdb
   if [ ! -d rocksdb ]; then git clone https://github.com/facebook/rocksdb -b v5.17.2 --depth=1; fi
   pushd rocksdb
   git fetch
   git clean -dxf
   git checkout v5.17.2

   env ROCKSDB_DISABLE_SNAPPY=1 \\
     ROCKSDB_DISABLE_GFLAGS=1 \\
     ROCKSDB_DISABLE_LZ4=1 \\
     ROCKSDB_DISABLE_ZSTD=1 \\
     ROCKSDB_DISABLE_NUMA=1 \\
     ROCKSDB_DISABLE_TBB=1 \\
     ROCKSDB_DISABLE_JEMALLOC=1 \\
     ROCKSDB_DISABLE_TCMALLOC=1 \\
     ROCKSDB_DISABLE_BACKTRACE=1 \\
     PORTABLE=1 \\
     FORCE_SSE42=1 \\
     DISABLE_WARNING_AS_ERROR=1 \\
     make shared_lib -j 20

   popd
"
 )))
